/**
 * -------------------------------------------------------------------------------------------------
 * @author  Ryan Sullivan (ryansullivan@googlemail.com)
 * 
 * @file    watchdog.hpp
 * @brief   header
 * 
 * @date    2022-02-26
 * -------------------------------------------------------------------------------------------------
 */
#pragma once

#include "result.hpp"

#include "system_info.hpp"

namespace iwdg {

/*------------------------------------------------------------------------------------------------*/
/*-forward-declarations---------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/

class WatchdogBuilder;

/*------------------------------------------------------------------------------------------------*/
/*-constant-definitions---------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/

enum class Error : uint32_t {
    Unavailable,
    InvalidTimeout
};

/*------------------------------------------------------------------------------------------------*/                    
/*-exported-variables-----------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------*/
/*-exported-functions-----------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/

class Watchdog {
public:
    static auto uninitialised() -> Watchdog&;
    static auto with_timeout(const sys::Microseconds timeout) -> cpp::result<Watchdog&, Error>;

    auto update() -> void;

private:
    Watchdog() = default;
    Watchdog(const uint32_t prescaler_register_value, const uint32_t reload_register_value);
};

/*------------------------------------------------------------------------------------------------*/
/*-Methods----------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------*/
/*-end-of-module----------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/
}

FROM alpine:3.13

# Prepare directory for tools
ARG TOOLS_PATH=/tools
RUN mkdir ${TOOLS_PATH}
WORKDIR ${TOOLS_PATH}

# Install basic programs and custom glibc
RUN apk --no-cache add ca-certificates wget make cmake git \
	&& wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
	&& wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-2.32-r0.apk \
	&& apk add glibc-2.32-r0.apk \
	&& rm glibc-2.32-r0.apk

# Install STM32 toolchain
ARG TOOLCHAIN_TARBALL_URL="https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2"
ARG TOOLCHAIN_PATH=${TOOLS_PATH}/toolchain
RUN wget ${TOOLCHAIN_TARBALL_URL} \
	&& export TOOLCHAIN_TARBALL_FILENAME=$(basename "${TOOLCHAIN_TARBALL_URL}") \
	&& tar -xvf ${TOOLCHAIN_TARBALL_FILENAME} \
	&& mv $(dirname `tar -tf ${TOOLCHAIN_TARBALL_FILENAME} | head -1`) ${TOOLCHAIN_PATH} \
	&& rm -rf ${TOOLCHAIN_PATH}/share/doc \
	&& rm ${TOOLCHAIN_TARBALL_FILENAME}

ENV PATH="${TOOLCHAIN_PATH}/bin:${PATH}"

# Install clangd
ARG CLANGD_ZIP_URL="https://github.com/clangd/clangd/releases/download/11.0.0/clangd-linux-11.0.0.zip"
ARG CLANGD_PATH=${TOOLS_PATH}/clangd
RUN wget ${CLANGD_ZIP_URL} \
    && export CLANGD_ZIP_FILENAME=$(basename "${CLANGD_ZIP_URL}") \
    && unzip ${CLANGD_ZIP_FILENAME} \
    && mv clangd_11.0.0 ${CLANGD_PATH} \
    && rm ${CLANGD_ZIP_FILENAME}

ENV PATH="${CLANGD_PATH}/bin:${PATH}"
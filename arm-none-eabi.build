[host_machine]
system     = 'none'
cpu_family = 'arm'
cpu        = 'armv7'
endian     = 'little'

[binaries]
c       = 'arm-none-eabi-gcc'
cpp     = 'arm-none-eabi-g++'
ld      = 'arm-none-eabi-ld'
ar      = 'arm-none-eabi-ar'
as      = 'arm-none-eabi-as'
size    = 'arm-none-eabi-size'
objdump = 'arm-none-eabi-objdump'
objcopy = 'arm-none-eabi-objcopy'
strip   = 'arm-none-eabi-strip'
gdb     = 'arm-none-eabi-gdb'

exe_wrapper = ''

[properties]
needs_exe_wrapper = false

[built-in options]
c_args = [
    '-march=armv7e-m',
    '-mcpu=cortex-m4',
    '-mthumb',
    '-mfloat-abi=hard',
    '-mfpu=fpv4-sp-d16',
    
    '-fno-exceptions',
    '-fno-non-call-exceptions',
    '-fno-rtti',
    '-fno-use-cxa-atexit',
    '-fno-threadsafe-statics',]
    
cpp_args = [
    '-march=armv7e-m',
    '-mcpu=cortex-m4',
    '-mthumb',
    '-mfloat-abi=hard',
    '-mfpu=fpv4-sp-d16',
    
    '-fno-exceptions',
    '-fno-non-call-exceptions',
    '-fno-rtti',
    '-fno-use-cxa-atexit',
    '-fno-threadsafe-statics',]

c_link_args = [
    '-march=armv7e-m',
    '-mcpu=cortex-m4',
    '-mthumb',
    '-mfloat-abi=hard',
    '-mfpu=fpv4-sp-d16',
    
    '-fno-exceptions',
    '-fno-non-call-exceptions',
    '-fno-rtti',
    '-fno-use-cxa-atexit',
    '-fno-threadsafe-statics',]

cpp_link_args = [
    '-march=armv7e-m',
    '-mcpu=cortex-m4',
    '-mthumb',
    '-mfloat-abi=hard',
    '-mfpu=fpv4-sp-d16',

    '-fno-exceptions',
    '-fno-non-call-exceptions',
    '-fno-rtti',
    '-fno-use-cxa-atexit',
    '-fno-threadsafe-statics',]

[cmake]
CMAKE_TRY_COMPILE_TARGET_TYPE = 'STATIC_LIBRARY'